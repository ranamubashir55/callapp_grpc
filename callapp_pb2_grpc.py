# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import callapp_pb2 as callapp__pb2


class CallAppStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetCallAppData = channel.unary_unary(
        '/CallApp/GetCallAppData',
        request_serializer=callapp__pb2.CallAppQuery.SerializeToString,
        response_deserializer=callapp__pb2.CallAppResponse.FromString,
        )


class CallAppServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetCallAppData(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CallAppServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetCallAppData': grpc.unary_unary_rpc_method_handler(
          servicer.GetCallAppData,
          request_deserializer=callapp__pb2.CallAppQuery.FromString,
          response_serializer=callapp__pb2.CallAppResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'CallApp', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
